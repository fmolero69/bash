#!/bin/bash

# FUNCTIONS:
#------------------

  # IP info
ipif() {
    if grep -P "(([1-9]\d{0,2})\.){3}(?2)" <<< "$1"; then
	curl ipinfo.io/"$1"
    else
	ipawk=($(host "$1" | awk '/address/ { print $NF }'))
	curl ipinfo.io/${ipawk[1]}
    fi
    echo
}

# Verificar espacio de pkg en cache
espacio () {
    echo $(clear)
    du -lsh /var/cache/pacman/pkg
}

# Limpiar los pkg de cache y dejar solo la ultima versión
limpiar () {
    echo $(clear)
    echo "Limpiando paquetes cache..."
    sudo pacman -Scc &&
    echo ""
    echo "Limpiando paquetes huérfanos..."
    sudo pacman -Rs $(pacman -Qtdq) &&
    echo $(clear)
}

# Mantenimiento de firmas de pkg
firma () {
    sudo pacman-key --init && sleep 5s &&
    echo $(clear)
    sudo pacman-key --populate archlinux && sleep 5s
    echo $(clear)
    sudo pacman-key --refresh-keys &&
    echo $(clear)
}

# Actualizar dunst
notificador () {
    notify-sene3ff1cd -u low -t 0 "Low sumary" "Low body" && sleep 3s
    notify-send -u normal -t 0 "Normal sumary" "Normal body" && sleep 3s
    notify-send -u critical -t 0 "Critical sumary" "Critical body" && sleep 3s
    notify-send -u critical -t 0 "test" "Critical body"
}

# Crear backup
BackUp (){
  echo $(clear) &&
  mkdir -p ~/Plantillas/BackUp &&
  cp -av ~/.config/{alacritty,dunst,mpd,picom,qtile,rofi} ~/Plantillas/BackUp/ && sleep 3s
  cp -av ~/{.bashrc,.backgrounds,.conkyrc,.Xresources,.local,.ncmpcpp} ~/Plantillas/BackUp && sleep 3s
  echo $(clear) &&
  ls -a ~/Plantillas/Backup &&
  echo "Backup creado con exito..."
}

birthday_sys(){
  stat / | awk '/Creación: /{print $2 " " substr($3,1,5)}'
}


pkglistgen (){
 pacman -Qe | grep -v "$(pacman -Qdtq)" > pkglist.txt &&
 pacman -Qm > aurpkglist.txt 
} 


# Función para mostrar información detallada de un proceso
pid() {
    local process_name="$1"

    if [ -z "$process_name" ]; then
        echo "Error: Debe proporcionar el nombre del proceso."
        return 1
    fi

    ps aux | awk -v process="$process_name" '
        $11 ~ process {
            printf "%s\t%s\t%s\t%.2f\t%.2f\n", $1, $11, $2, $4, $5
        }
    ' | grep -v "grep"
}

#  neofetch --size none

  [ -f ~/.fzf.bash ] && source ~/.fzf.bash


